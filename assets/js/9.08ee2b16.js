(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{363:function(t,a,s){"use strict";s.r(a);var e=s(42),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"实现一个repeat方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现一个repeat方法"}},[t._v("#")]),t._v(" 实现一个repeat方法")]),t._v(" "),s("h3",{attrs:{id:"要求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#要求"}},[t._v("#")]),t._v(" 要求")]),t._v(" "),s("p",[t._v("repeat 的函数原型:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行 times 次 func, 每次调用之间间隔 wait 秒")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("repeat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" times "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" opts "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" wait"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" immediate"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TODO")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// func 原型: (accumulator, time)")]),t._v("\n\n")])])]),s("p",[t._v("参数解析:")]),t._v(" "),s("ol",[s("li",[t._v("times: 执行次数, 默认 1")]),t._v(" "),s("li",[t._v("opts: 选项, 可选, 默认 { wait: 0, immediate: false }\n"),s("ol",[s("li",[t._v("opts.wait: 每次 func 调用之间间隔时间, 单位 毫秒, 默认 0。如果 wait 大于 0, 则异步执行。")]),t._v(" "),s("li",[t._v("首次取决于 opts.immediate; 否则, 同步执行")]),t._v(" "),s("li",[t._v("opts.immediate: 首次是否立即执行, 默认 false")]),t._v(" "),s("li",[t._v("opts.initialValue: 初次执行 func 所接受到的初始值, 默认空")])])]),t._v(" "),s("li",[t._v("func 原型为: (accumulator, time) => any\n"),s("ol",[s("li",[t._v("accumulator 是上一次 func 函数的执行结果, 如果是首次执行, 则为 opts.initialValue")]),t._v(" "),s("li",[t._v("time: 是第几次执行, 首次执行从 0 开始")])])])])])}),[],!1,null,null,null);a.default=n.exports}}]);